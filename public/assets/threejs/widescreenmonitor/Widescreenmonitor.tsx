/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 src/assets/threejs/widescreenmonitor/widescreenmonitor.gltf -t 
Author: dylanheyes (https://sketchfab.com/dylanheyes)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/ultrawide-monitor-f84d24b6df3648d884fd9be9c8007dd4
Title: Ultrawide Monitor
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Ultrawide_Monitor_Screen_0: THREE.Mesh
    Ultrawide_Monitor_Body_0: THREE.Mesh
    Ultrawide_Monitor_Body_0_1: THREE.Mesh
    Ultrawide_Monitor_Lights_0: THREE.Mesh
  }
  materials: {
    Screen: THREE.MeshStandardMaterial
    Body: THREE.MeshStandardMaterial
    Lights: THREE.MeshStandardMaterial
  }
  // animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/widescreenmonitor.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[Math.PI / 2, -0.001, Math.PI]}>
        <group rotation={[-Math.PI, 0, 0]} scale={0.01}>
          <group rotation={[0, 0, Math.PI / 2]} scale={[19.412, 536.206, 242.198]}>
            <mesh geometry={nodes.Ultrawide_Monitor_Screen_0.geometry} material={materials.Screen} />
            <mesh geometry={nodes.Ultrawide_Monitor_Body_0.geometry} material={materials.Body} />
            <mesh geometry={nodes.Ultrawide_Monitor_Body_0_1.geometry} material={materials.Body} />
            <mesh geometry={nodes.Ultrawide_Monitor_Lights_0.geometry} material={materials.Lights} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/widescreenmonitor.gltf')
